# Longest Nice substring 

#include <iostream>
#include <unordered_set>

using namespace std;

string longestNiceSubstring(string s) {
    if (s.length() < 2) return "";

    unordered_set<char> charSet(s.begin(), s.end());

    for (int i = 0; i < s.length(); i++) {
        char ch = s[i];
        if (charSet.count(toupper(ch)) && charSet.count(tolower(ch))) {
            continue;
        }

        string left = longestNiceSubstring(s.substr(0, i));
        string right = longestNiceSubstring(s.substr(i + 1));

        return left.length() >= right.length() ? left : right;
    }
    return s;
}

int main() {
    cout << longestNiceSubstring("YazaAay") << endl;
    cout << longestNiceSubstring("Bb") << endl;
    cout << longestNiceSubstring("c") << endl;
    return 0;
}
